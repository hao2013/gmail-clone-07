{"version":3,"sources":["features/userSlice.js","firebase.js","Header.js","SidebarOption.js","features/mailSlice.js","Sidebar.js","Mail.js","Section.js","EmailRow.js","EmailList.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","selectUser","reducers","login","state","action","user","payload","logout","actions","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Avatar","photoUrl","onClick","signOut","then","SidebarOption","Icon","title","number","selected","mailSlice","selectMail","sendMessageIsOpen","selectedMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","Button","startIcon","fontSize","InboxIcon","StarIcon","SendIcon","NoteIcon","AccessTimeFilledIcon","LabelImportantIcon","ScheduleSendIcon","DeleteIcon","ExpandMoreOutlinedIcon","Mail","history","useHistory","push","subject","time","description","Section","color","style","borderBottom","EmailRow","id","Checkbox","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","LocalOfferIcon","to","message","timestamp","Date","seconds","toLocaleString","SendMail","useForm","register","handleSubmit","errors","watch","formState","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47bbad6b.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    selectUser: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACULtqHi8INFzdu-XjbUGsgqHqBTPNlNA\",\n  authDomain: \"clone-07-ed52e.firebaseapp.com\",\n  projectId: \"clone-07-ed52e\",\n  storageBucket: \"clone-07-ed52e.appspot.com\",\n  messagingSenderId: \"839061188079\",\n  appId: \"1:839061188079:web:793e22642b98c058fb9a1a\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebaseApp.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, provider };\n","import React from \"react\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport \"./Header.css\";\nimport { logout, selectUser } from \"./features/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { auth } from \"./firebase\";\n\nfunction Header() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  // ログアウト\n  const signOut = () => {\n    auth.signOut().then(() => {\n      dispatch(logout());\n    });\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <IconButton>\n          <MenuIcon />\n        </IconButton>\n        <img\n          src=\"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_2x_r2.png\"\n          alt=\"gmail\"\n        />\n      </div>\n\n      <div className=\"header__middle\">\n        <IconButton>\n          <SearchIcon />\n        </IconButton>\n        <input placeholder=\"メールを検索\" type=\"text\" />\n      </div>\n\n      <div className=\"header__right\">\n        <IconButton>\n          <HelpOutlineIcon />\n        </IconButton>\n        <IconButton>\n          <SettingsIcon />\n        </IconButton>\n        <IconButton>\n          <AppsIcon />\n        </IconButton>\n        <Avatar src={user?.photoUrl} onClick={signOut} />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./SidebarOption.css\";\n\nfunction SidebarOption({ Icon, title, number, selected }) {\n  return (\n    <div className={`sidebarOption ${selected && \"sidebarOption--active\"}`}>\n      <Icon />\n      <h3>{title}</h3>\n      <p>{number}</p>\n    </div>\n  );\n}\n\nexport default SidebarOption;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const mailSlice = createSlice({\n  name: \"mail\",\n  initialState: {\n    selectMail: null,\n    sendMessageIsOpen: false,\n  },\n  reducers: {\n    selectMail: (state, action) => {\n      state.selectedMail = action.payload;\n    },\n    openSendMessage: (state) => {\n      state.sendMessageIsOpen = true;\n    },\n    closeSendMessage: (state) => {\n      state.sendMessageIsOpen = false;\n    },\n  },\n});\n\nexport const { selectMail, openSendMessage, closeSendMessage } =\n  mailSlice.actions;\n\nexport const selectOpenMail = (state) => state.mail.selectedMail;\n\nexport const selectSendMessageIsOpen = (state) => state.mail.sendMessageIsOpen;\n\nexport default mailSlice.reducer;\n","import React from \"react\";\nimport \"./Sidebar.css\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SidebarOption from \"./SidebarOption\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport NoteIcon from \"@material-ui/icons/Note\";\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\nimport ScheduleSendIcon from \"@material-ui/icons/ScheduleSend\";\nimport ExpandMoreOutlinedIcon from \"@material-ui/icons/ExpandMoreOutlined\";\nimport AccessTimeFilledIcon from \"@material-ui/icons/AccessTimeFilled\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { IconButton } from \"@material-ui/core\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport DuoIcon from \"@material-ui/icons/Duo\";\nimport { useDispatch } from \"react-redux\";\nimport { openSendMessage } from \"./features/mailSlice\";\n\nfunction Sidebar() {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"button__compose\">\n        <Button\n          startIcon={<AddIcon fontSize=\"large\" />}\n          onClick={() => dispatch(openSendMessage())}\n        >\n          作成\n        </Button>\n      </div>\n      <SidebarOption\n        Icon={InboxIcon}\n        title=\"受信トレイ\"\n        number=\"18\"\n        selected=\"true\"\n      />\n      <SidebarOption Icon={StarIcon} title=\"スター付き\" number=\"6\" />\n      <SidebarOption Icon={SendIcon} title=\"送信済み\" number=\"8\" />\n      <SidebarOption Icon={NoteIcon} title=\"下書き\" number=\"8\" />\n      <SidebarOption Icon={AccessTimeFilledIcon} title=\"スヌーズ中\" />\n      <SidebarOption Icon={LabelImportantIcon} title=\"重要\" number=\"2\" />\n      <SidebarOption Icon={ScheduleSendIcon} title=\"予定\" />\n      <SidebarOption Icon={DeleteIcon} title=\"ゴミ箱\" />\n      <SidebarOption Icon={ExpandMoreOutlinedIcon} title=\"もっと見る\" />\n      <div className=\"sidebar__footer\">\n        <div className=\"sidebar__footerIcons\">\n          <IconButton>\n            <PersonIcon />\n          </IconButton>\n          <IconButton>\n            <DuoIcon />\n          </IconButton>\n          <IconButton>\n            <PhoneIcon />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport MoveToInboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport ReportGmailerrorredIcon from \"@material-ui/icons/ReportGmailerrorred\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport { IconButton } from \"@material-ui/core\";\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Mail.css\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { Avatar } from \"@material-ui/core\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport ReplyIcon from \"@material-ui/icons/Reply\";\nimport { useSelector } from \"react-redux\";\nimport { selectOpenMail } from \"./features/mailSlice\";\n\nfunction Mail() {\n  const history = useHistory();\n  const selectedMail = useSelector(selectOpenMail);\n\n  return (\n    <div className=\"mail\">\n      <div className=\"mail__tools\">\n        <div className=\"mail__toolsLeft\">\n          <IconButton onClick={() => history.push(\"/\")}>\n            <ArrowBackIcon />\n          </IconButton>\n          <IconButton>\n            <MoveToInboxIcon />\n          </IconButton>\n          <IconButton>\n            <ReportGmailerrorredIcon />\n          </IconButton>\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n          <IconButton>\n            <EmailIcon />\n          </IconButton>\n          <IconButton>\n            <WatchLaterIcon />\n          </IconButton>\n          <IconButton>\n            <CheckCircleIcon />\n          </IconButton>\n          <IconButton>\n            <LabelIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n\n        <div className=\"mail__toolsRight\">\n          <IconButton>\n            <NavigateBeforeIcon />\n          </IconButton>\n          <IconButton>\n            <NavigateNextIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"mail__body\">\n        <div className=\"mail__bodyHeader\">\n          <h2>{selectedMail?.subject}</h2>\n          <div className=\"mail__bodyHeaderIcon\">\n            <IconButton>\n              <PrintIcon />\n            </IconButton>\n            <IconButton>\n              <ExitToAppIcon />\n            </IconButton>\n          </div>\n        </div>\n        <div className=\"mail_content\">\n          <div className=\"mail__contentLeft\">\n            <Avatar></Avatar>\n          </div>\n          <div className=\"mail__contentRight\">\n            <div className=\"mail__contentRight-header\">\n              <h3>{selectedMail?.title}</h3>\n\n              <p className=\"mail__time\">{selectedMail?.time}</p>\n              <IconButton>\n                <StarBorderIcon />\n              </IconButton>\n              <IconButton>\n                <ReplyIcon />\n              </IconButton>\n              <IconButton>\n                <MoreVertIcon />\n              </IconButton>\n            </div>\n            <div className=\"mail__contentRight-body\">\n              {selectedMail?.description}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Mail;\n","import React from \"react\";\nimport \"./Section.css\";\n\nfunction Section({ Icon, title, color, selected }) {\n  return (\n    <div\n      className={`section ${selected && \"section--selected\"}`}\n      style={{\n        borderBottom: `3px solid ${color}`,\n        color: `${selected && color}`,\n      }}\n    >\n      <Icon />\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { Checkbox, IconButton } from \"@material-ui/core\";\nimport \"./EmailRow.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { selectMail } from \"./features/mailSlice\";\n\nfunction EmailRow({ id, title, subject, description, time }) {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const openMail = () => {\n    dispatch(selectMail({ id, title, subject, description, time }));\n    history.push(\"/mail\");\n  };\n\n  return (\n    <div onClick={openMail} className=\"emailRow\">\n      <div className=\"emailRow__options\">\n        <Checkbox />\n        <IconButton>\n          <StarBorderIcon />\n        </IconButton>\n      </div>\n      <h3 className=\"emailRow__title\">{title}</h3>\n      <div className=\"emailRow__message\">\n        <h4>\n          {subject}\n          <span className=\"emailRow__description\">--{description}</span>\n        </h4>\n      </div>\n      <div className=\"emailRow__time\">{time}</div>\n    </div>\n  );\n}\n\nexport default EmailRow;\n","import React, { useState, useEffect } from \"react\";\nimport { Checkbox, IconButton } from \"@material-ui/core\";\nimport \"./EmailList.css\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Section from \"./Section\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport EmailRow from \"./EmailRow\";\nimport { db } from \"./firebase\";\n\nfunction EmailList() {\n  const [emails, setEmails] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"emails\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setEmails(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n  }, []);\n\n  return (\n    <div className=\"emailList\">\n      <div className=\"emailList__setting\">\n        <div className=\"emailList__settingLeft\">\n          <Checkbox />\n          <IconButton>\n            <ArrowDropDownIcon />\n          </IconButton>\n          <IconButton>\n            <RedoIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n\n        <div className=\"emailList__settingRight\">\n          <IconButton>\n            <ChevronLeftIcon />\n          </IconButton>\n          <IconButton>\n            <NavigateNextIcon />\n          </IconButton>\n          <IconButton>\n            <SettingsIcon />\n          </IconButton>\n          　\n        </div>\n      </div>\n\n      <div className=\"emailList__sections\">\n        <Section Icon={InboxIcon} title=\"メイン\" color=\"#d93025\" selected />\n        <Section Icon={LocalOfferIcon} title=\"プロモーション\" color=\"#188038\" />\n        <Section Icon={InboxIcon} title=\"新着\" color=\"#e37400\" />\n      </div>\n\n      <div className=\"emailList__list\">\n        {emails.map(({ id, data: { to, subject, message, timestamp } }) => (\n          <EmailRow\n            id={id}\n            key={id}\n            title={to}\n            subject={subject}\n            description={message}\n            time={new Date(timestamp?.seconds * 1000).toLocaleString(\"ja\")}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default EmailList;\n","import React from \"react\";\nimport \"./SendMail.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Button } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useForm } from \"react-hook-form\";\nimport { closeSendMessage } from \"./features/mailSlice\";\nimport { useDispatch } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { db } from \"./firebase\";\n\nfunction SendMail() {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (formData) => {\n    console.log(formData);\n\n    //  firebaseのデータベースに保存\n    db.collection(\"emails\").add({\n      to: formData.to,\n      subject: formData.subject,\n      message: formData.message,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    // 送信ボタンを押すとメールボックスが閉じる;\n    dispatch(closeSendMessage());\n  };\n\n  return (\n    <div className=\"sendMail\">\n      <div className=\"sendMail__header\">\n        <h3>新規メッセージ</h3>\n        <CloseIcon\n          className=\"sendMail__close\"\n          onClick={() => dispatch(closeSendMessage())}\n        />\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          type=\"email\"\n          placeholder=\"宛先\"\n          {...register(\"to\", { required: true })}\n        />\n        {errors.to && (\n          <p className=\"sendMail__error\">宛先を１つ以上指定してください</p>\n        )}\n\n        <input\n          type=\"text\"\n          placeholder=\"件名\"\n          {...register(\"subject\", { required: true })}\n        />\n        {errors.subject && (\n          <p className=\"sendMail__error\">件名を入力してください</p>\n        )}\n\n        <textarea\n          type=\"text\"\n          className=\"sendMail__message\"\n          {...register(\"message\", { required: true })}\n        />\n        {errors.message && (\n          <p className=\"sendMail__error\">本文を入力してください</p>\n        )}\n\n        <div className=\"sendMail__options\">\n          <Button className=\"sendMail__send\" variant=\"contained\" type=\"submit\">\n            送信\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SendMail;\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./features/userSlice\";\nimport { auth, provider } from \"./firebase\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const dispatch = useDispatch();\n\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then(({ user }) => {\n        dispatch(\n          login({\n            displayName: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          })\n        );\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Gmail_icon_%282020%29.svg/1280px-Gmail_icon_%282020%29.svg.png\"\n          alt=\"gmail\"\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={signIn}>\n          Login\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Mail from \"./Mail\";\nimport EmailList from \"./EmailList\";\nimport SendMail from \"./SendMail\";\nimport { selectSendMessageIsOpen } from \"./features/mailSlice\";\nimport { login, selectUser } from \"./features/userSlice\";\nimport Login from \"./Login\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      // ログイン状態\n      if (user) {\n        dispatch(\n          login({\n            displayName: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          })\n        );\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"App\">\n          <Header />\n          <div className=\"app_body\">\n            <Sidebar />\n\n            <Switch>\n              <Route path=\"/mail\">\n                <Mail />\n              </Route>\n              <Route path=\"/\">\n                <EmailList />\n              </Route>\n            </Switch>\n          </div>\n          {sendMessageIsOpen && <SendMail />}\n        </div>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport mailReducer from \"../features/mailSlice\";\nimport userReducer from \"../features/userSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    mail: mailReducer,\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}